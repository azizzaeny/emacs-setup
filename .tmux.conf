set-option -sa terminal-overrides ",xterm*:Tc"
set -g mouse off
set -g history-limit 100000
set -g default-terminal "screen-256color"
set -g status-style bg='#1a1a1a',fg='#d3d3d3'
set -g pane-border-style bg=default,fg='#1a1a1a'
set -g pane-active-border-style bg=default,fg='#1a1a1a'
set-option -g pane-border-status off
set-option -g set-clipboard on  
set -g pane-border-format ""
set -g escape-time 10
set -g focus-events on
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on    

# set -g @catppuccin_date_time "%Y-%m-%d %H:%M"
# set -g @catppuccin_user "on"
# set -g @catppuccin_host "on"
# Some basic mocha colors.
set -g @ctp_bg "#24273a"
set -g @ctp_surface_1 "#494d64"
set -g @ctp_fg "#cad3f5"
set -g @ctp_mauve "#F5A97F" #"#c6a0f6"
set -g @ctp_mauve_1 "#c6a0f6"
set -g @ctp_crust "#181926"

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

#set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'catppuccin/tmux#v2.1.2'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tpm'

# status line
#set -gF status-style "bg=#{@ctp_bg},fg=#{@ctp_fg}"

run '~/.tmux/plugins/tpm/tpm'
run '~/.tmux/plugins/tmux/catppuccin.tmux'
  
# windows
set -gF window-status-format "#[bg=#{@ctp_crust},fg=#{@ctp_fg}] ##I #[bg=#{@ctp_bg},fg=#{@ctp_fg}] ##S/##W "
set -gF window-status-current-format "#[bg=#{@ctp_mauve},fg=#{@ctp_crust}] ##I #[bg=#{@ctp_crust},fg=#{@ctp_fg}] ##S/##W "  
  
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
  
    
set-option -g prefix C-b
unbind C-b
bind C-b send-prefix
  
bind-key c command-prompt -p "Window Name:" "new-window -c '#{pane_current_path}' -n '%%'"  
bind-key | command-prompt -p "Split percentage:" "split-window -h -p '%%'"
bind-key _ command-prompt -p "Split percentage:" "split-window -v -p '%%'"
bind-key k setw synchronize-panes
bind-key f command-prompt -p "Session name:" "run-shell 'tmux switch-client -t %1 || tmux display-message \"Session %1 not found.\"'"
bind-key m 'switch-client -l' # switch to latest session
bind-key r run-shell "cp ~/emacs-setup/.tmux.conf ~/.tmux.conf && cp ~/emacs-setup/.zshrc ~/.zshrc && tmux source-file ~/.tmux.conf && source ~/.zshrc"
bind-key W command-prompt -p "Swap with (session:window.pane):" "swap-pane -s '%%'"
unbind t
bind-key C-v command-prompt -p "Server:" "run-shell 'ssh %% \"cat ~/clipboard/clipboard.txt\" | pbcopy > /dev/null 2>&1 &'"
bind-key C-c command-prompt -p "Server:" "run-shell 'pbpaste | ssh %% \"cat > ~/clipboard/clipboard.txt\" > /dev/null 2>&1 &'"
    
#set -g allow-rename off
#set -g window-status-format "#I [#S/#W]"
#set -g window-status-current-format "#I [#S/#W]"
  
# set -g pane-border-width 0

# setw synchronize-panes off  
# set-option -g mode-keys emacs
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# set -g alternate-screen off
# Set prefix to C-b (default)

# Remote tmux configuration (.tmux.conf)
# Allow passthrough to remote tmux using C-a
# bind-key C-a send-prefix
# Set prefix to C-a
# set-option -g prefix C-a
# unbind C-a
# bind C-a send-prefix

# sample running shell   
# bind-key C-v run-shell 'echo "hellow world" > /tmp/output.txt'

#bind-key c command-prompt "new-window -n '%%'"
  
# pane management
#bind | split-window -h -p 20

#bind - split-window -v -p 20
  
# quikly switch between sessions

# bind-key C-f command-prompt -p "Session name:" "run-shell '~/find-and-switch-session.sh %1'"
  
# reloading
# bind-key C-r source-file ~/.tmux.conf

# bind C-n command-prompt -p "New Session:" "new-session -A -s '%%'"
# bind k confirm kill-session

# Swap current pane with a specific window (interactive prompt)

# second prompt examples
#bind-key S command-prompt -p "Swap with (session:window.pane):" "command-prompt -p 'Second prompt:' 'run-shell \"tmux swap-pane -s %% && tmux send-keys %% \"'"

# start sshfs

#bind-key t run-shell "sshfs -o cache=yes,compression=no,kernel_cache,reconnect,ServerAliveInterval=15,ServerAliveCountMax=3 sandbox:/home/aziz/workspaces ~/workspaces"

# copy paste management 

# bind-key C-y run-shell "pbpaste | ssh sandbox 'cat > ~/clipboard/clipboard.text'"
# bind-key C-y command-prompt -p "Server:" "run-shell 'pbpaste | ssh %% \"cat ~/clipboard/clipboard.txt\":'"

  
# unbind ]
# bind C-c copy-mode
# bind C-v paste-buffer

# Unbind all scrolling-related keys
# unbind -T copy-mode-vi PageUp
# unbind -T copy-mode-vi PageDown
# unbind -T copy-mode C-b
# unbind -T copy-mode C-u
# unbind -T copy-mode C-d
# unbind -T copy-mode-vi k
# unbind -T copy-mode-vi j
    
# C-b [: Enter copy mode
# C-f: Move forward (right) one character
# C-b: Move backward (left) one character
# C-n: Move down one line
# C-p: Move up one line
# M-f: Move forward one word
# M-b: Move backward one word
# C-a: Move to the beginning of the line
# C-e: Move to the end of the line
# C-v: Move down one page (like PageDown)
# M-v: Move up one page (like PageUp)
# C-Space: Start selection
# C-w: Copy the selected text to buffer

# bind C-p previous-window
# bind C-n next-window
# bind C-a send-prefix
# bind a last-window

# window movement
# Ctrl-b c: Create a new window.
# Ctrl-b w: List and switch between windows.
# Ctrl-b n/p: Move to the next/previous window.
# Ctrl-b ,: Rename the current window.

# Ctrl-b %: Split pane vertically.
# Ctrl-b ": Split pane horizontally.
# Ctrl-b o: Switch to the next pane.
# Ctrl-b q: Show pane numbers and switch with numbers.
# Ctrl-b x: Close the current pane.
# spliting into 20% bellow  
# split windows and move window occupy 3 into this
# tmux join-pane -s local:3
# tmux join-pane -s local:3 -t current-session:0.1
# tmux split-window -v -p 20
# tmux split-window -v -p 20 "tail -f /var/log/syslog"
# bind-key S split-window -v -p 25
# bind-key m command-prompt "split-window -v -p 20; join-pane -s '%%'"  
# tmux move-pane -s source-session:source-window.pane -t target-session:target-window
# tmux swap-pane -s my-session:2.0
  
# sent to all panes
# Ctrl-b : and then setw synchronize-panes on

# sending commands to specific windows and pane 
# tmux send-keys -t session-name:window-number "command" C-m
# tmux send-keys -t session-name:window-number.pane-number "command" C-m  
# eg: tmux send-keys -t node-research:1 "console.log('Hello from Window 1');" C-m
# eg: tmux send-keys -t node-research:1.0 "console.log('Hello from Pane 0');" C-m

# list all pane and windows
# tmux list-windows
# tmux list-panes -t session-name:window-number

# move window to another sessions
# tmux move-window -s session-name:window-number -t target-session
# eg: tmux move-window -s node-research:1 -t other-session

# Moving Panes Between Windows
# tmux break-pane -t session-name:window-number.pane-number
# eg: tmux break-pane -t node-research:1.0

# Joining panes
# tmux join-pane -s session-name:window-number.pane-number -t target-session:target-window
# tmux join-pane -s node-research:1.0 -t node-research:2

# moving sessions windows
# tmux new-session -d -s new-session-name
# tmux send-keys -t existing-session:window-number "tmux attach -t new-session-name" C-m
